# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2019-05-23 15:59
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import smart_selects.db_fields
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('configuracion', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('lugar', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Acuicola',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posse', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=20, verbose_name='Posee')),
            ],
            options={
                'verbose_name_plural': 'Piscicultura/Acu\xedcolas',
            },
        ),
        migrations.CreateModel(
            name='Afiliado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('cedula', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='C\xe9dula')),
                ('sexo', models.CharField(choices=[('Femenino', 'Femenino'), ('Masculino', 'Masculino')], max_length=20)),
                ('fecha_nacimiento', models.DateField()),
                ('lugar_nacimiento', models.CharField(max_length=250)),
                ('foto', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='productores/')),
                ('anio_ingreso', models.IntegerField(blank=True, null=True, verbose_name='A\xf1o Ingreso UNAG')),
                ('numero_celular', models.CharField(blank=True, max_length=20, null=True)),
                ('tipo_celular', models.CharField(blank=True, choices=[('Movistar', 'Movistar'), ('Claro', 'Claro')], max_length=20, null=True)),
                ('edad', models.IntegerField(editable=False)),
                ('comunidad', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='municipio', chained_model_field='municipio', on_delete=django.db.models.deletion.CASCADE, to='lugar.Comunidad')),
                ('municipio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lugar.Municipio')),
            ],
            options={
                'verbose_name_plural': 'I. Datos generales del/la afiliado/a',
            },
        ),
        migrations.CreateModel(
            name='Agricultura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_sembrada', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='\xc1rea sembrada(Mz)')),
                ('produccion_total', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Producci\xf3n Total')),
                ('semillas', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Semilla')),
                ('consumo_humano', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Consumo humano')),
                ('consumo_animal', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Consumo animal')),
                ('venta', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Venta')),
                ('quien_vende', models.CharField(choices=[('Intermediario', 'Intermediario'), ('Al estado', 'Al estado'), ('Consumidor / Mercado local', 'Consumidor / Mercado local'), ('Mercado nacional', 'Mercado nacional'), ('Mercado internacional / Exportaci\xf3n', 'Mercado internacional / Exportaci\xf3n'), ('No vende', 'No vende')], max_length=50)),
                ('costo_produccion', models.FloatField(blank=True, null=True, verbose_name='Costo de producci\xf3n (Inversi\xf3n) C$/Mz')),
                ('ingresos_produccion', models.FloatField(blank=True, null=True, verbose_name='Ingresos de la producci\xf3n C$/Mz')),
                ('ganancia_perdida', models.FloatField(blank=True, null=True, verbose_name='Ganancia o Perdida C$/Mz')),
                ('tipo', models.CharField(choices=[('Cultivo de primera', 'Cultivo de primera'), ('Cultivo de postrera', 'Cultivo de postrera'), ('Cultivo de apante', 'Cultivo de apante'), ('Cultivos permanentes (Frutales, C\xedtricos, \u2026)', 'Cultivos permanentes (Frutales, C\xedtricos, \u2026)'), ('Otros', 'Otros')], max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Agricultura',
            },
        ),
        migrations.CreateModel(
            name='Apicola',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('colmenas', models.IntegerField(verbose_name='N\xfamero de colmenas')),
            ],
            options={
                'verbose_name_plural': 'Ap\xedcolas',
            },
        ),
        migrations.CreateModel(
            name='AreasFinca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mz', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('areas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.Areas')),
            ],
            options={
                'verbose_name_plural': '\xc1rea de la Finca (Mzs)',
            },
        ),
        migrations.CreateModel(
            name='BeneficiadoProyecto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respuesta', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=2)),
            ],
            options={
                'verbose_name_plural': '\xbfEs beneficiado por otros proyectos o programa del gobierno?',
            },
        ),
        migrations.CreateModel(
            name='Cotizacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respuesta', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=2)),
            ],
            options={
                'verbose_name_plural': '\xbfCotiza?',
            },
        ),
        migrations.CreateModel(
            name='CotizacionOrganizacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentarios', models.TextField(blank=True, null=True)),
                ('acciones_cambio_climatico', models.ManyToManyField(blank=True, to='configuracion.CambioClimatico', verbose_name='Acciones que realiza para enfrentar el cambio clim\xe1tico')),
                ('afiliacion_unag', models.ManyToManyField(blank=True, to='configuracion.AfiliacionUnag', verbose_name='Motivos de Afiliaci\xf3n a la UNAG')),
            ],
            options={
                'verbose_name': 'Cotizaci\xf3n y Organizaci\xf3n',
            },
        ),
        migrations.CreateModel(
            name='Credito',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respuesta', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=2)),
            ],
            options={
                'verbose_name_plural': '\xbfRecibe cr\xe9dito?',
            },
        ),
        migrations.CreateModel(
            name='DatosFamiliares',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=300)),
                ('sexo', models.CharField(choices=[('Femenino', 'Femenino'), ('Masculino', 'Masculino')], max_length=20)),
                ('fecha_nacimiento', models.DateField()),
                ('escolaridad', models.CharField(choices=[('No estudia', 'No estudia'), ('Preescolar', 'Preescolar'), ('Primaria', 'Primaria'), ('Secundaria', 'Secundaria'), ('Universitario', 'Universitario')], max_length=300, verbose_name='Escolaridad (\xdaltimo a\xf1o de escolaridad)')),
                ('parentesco', models.CharField(choices=[('Abuela', 'Abuela'), ('Abuelo', 'Abuelo'), ('Bisabuela', 'Bisabuela'), ('Bisabuelo', 'Bisabuelo'), ('Cuniada', 'Cu\xf1ada'), ('Cuniado', 'Cu\xf1ado'), ('Esposa', 'Esposa'), ('Esposo', 'Esposo'), ('Hermana', 'Hermana'), ('Hermano', 'Hermano'), ('Hija', 'Hija'), ('Hijo', 'Hijo'), ('Madre', 'Madre'), ('Nuera', 'Nuera'), ('Padre', 'Padre'), ('Pareja', 'Pareja'), ('Prima', 'Prima'), ('Primo', 'Primo'), ('Sobrina', 'Sobrina'), ('Sobrino', 'Sobrino'), ('Suegra', 'Suegra'), ('Suegro', 'Suegro'), ('Tia', 'T\xeda'), ('Tio', 'T\xedo'), ('Yerno', 'Yerno'), ('Nieto', 'Nieto'), ('Nieta', 'Nieta'), ('Otro', 'Otro')], max_length=200)),
                ('donde_emigran', models.CharField(blank=True, choices=[('Local', 'Local'), ('Nacional', 'Nacional'), ('Centroam\xe9rica', 'Centroam\xe9rica'), ('Internacional', 'Internacional')], max_length=25, null=True)),
                ('tiempo', models.CharField(blank=True, choices=[('< 1 mes', '< 1 mes'), ('1-3 meses', '1-3 meses'), ('4-6 meses', '4-6 meses'), ('7-12 meses', '7-12 meses'), ('> 12 meses', '> 12 meses')], max_length=25, null=True)),
                ('meses', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Enero', 'Enero'), ('Febrero', 'Febrero'), ('Marzo', 'Marzo'), ('Abril', 'Abril'), ('Mayo', 'Mayo'), ('Junio', 'Junio'), ('Julio', 'Julio'), ('Agosto', 'Agosto'), ('Septiembre', 'Septiembre'), ('Octubre', 'Octubre'), ('Noviembre', 'Noviembre'), ('Diciembre', 'Diciembre')], max_length=88)),
                ('edad', models.IntegerField(editable=False)),
            ],
            options={
                'verbose_name_plural': 'Datos Familiares',
            },
        ),
        migrations.CreateModel(
            name='DatosGenerales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acceso_internet', models.CharField(blank=True, choices=[('Si', 'Si'), ('No', 'No')], max_length=2, null=True)),
                ('estado_civil', models.CharField(choices=[('Soltero(a)', 'Soltero(a)'), ('Casado(a)', 'Casado(a)'), ('Acompa\xf1ado(a)', 'Acompa\xf1ado(a)'), ('Viudo(a)', 'Viudo(a)'), ('Divorciado(a)', 'Divorciado(a)')], max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Datos generales',
            },
        ),
        migrations.CreateModel(
            name='DireccionFinca2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direccion', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Direcci\xf3n de la finca',
            },
        ),
        migrations.CreateModel(
            name='DocumentoPropiedad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.Documento')),
            ],
            options={
                'verbose_name_plural': 'Documento de propiedad que posee',
            },
        ),
        migrations.CreateModel(
            name='Encuesta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_encuesta', models.DateField()),
                ('ronda', models.IntegerField(choices=[(1, 'I')])),
                ('anio', models.IntegerField(editable=False)),
                ('afiliado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Afiliado')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'II. Encuestas',
            },
        ),
        migrations.CreateModel(
            name='EnergiaElectrica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respuesta', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=2)),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': '\xbfTiene acceso a Energ\xeda El\xe9ctrica?',
            },
        ),
        migrations.CreateModel(
            name='Escolaridad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('escolaridad', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=20, verbose_name='Lee y escribe')),
                ('nivel_escolaridad', models.CharField(blank=True, choices=[('No estudia', 'No estudia'), ('Preescolar', 'Preescolar'), ('Primaria', 'Primaria'), ('Secundaria', 'Secundaria'), ('Universitario', 'Universitario')], max_length=20, null=True)),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': 'Escolaridad afiliado',
            },
        ),
        migrations.CreateModel(
            name='FamiliaEmigra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hombres', models.IntegerField()),
                ('mujeres', models.IntegerField()),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': 'Cu\xe1ntos miembros de la familia emigran',
            },
        ),
        migrations.CreateModel(
            name='FormaTenencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legalizada', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=2)),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': 'Forma de Tenencia',
            },
        ),
        migrations.CreateModel(
            name='FuentesAguaFinca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
                ('fuentes', models.ManyToManyField(to='configuracion.Sistema')),
            ],
            options={
                'verbose_name_plural': 'Fuentes de agua en la finca',
            },
        ),
        migrations.CreateModel(
            name='Infraestructura',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.Infraestructuras', verbose_name='Tipo de infraestructura')),
            ],
        ),
        migrations.CreateModel(
            name='InventarioAnimales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('cuanto_vende', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.Animales')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': 'Inventario de animales',
            },
        ),
        migrations.CreateModel(
            name='ManoObra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mano_obra', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=2)),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': '\xbfContrata mano de obra?',
            },
        ),
        migrations.CreateModel(
            name='MiembroBancoSemilla',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respuesta', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=2)),
                ('banco_semillas', models.ManyToManyField(blank=True, to='configuracion.BancoSemilla')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': '\xbfEs miembro de Bancos de Semillas?',
            },
        ),
        migrations.CreateModel(
            name='MiembroCooperativa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respuesta', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=2)),
                ('cooperativa', models.ManyToManyField(blank=True, to='configuracion.Cooperativa')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': '\xbfEs miembro de Cooperativa?',
            },
        ),
        migrations.CreateModel(
            name='OrigenPropiedad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
                ('opcion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.Origen')),
            ],
            options={
                'verbose_name_plural': 'Origen de la Propiedad',
            },
        ),
        migrations.CreateModel(
            name='OtrasTierras',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mz', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('areas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.Areas')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': '\xc1reas alquiladas de la finca (Mzs)',
            },
        ),
        migrations.CreateModel(
            name='OtrosTiposEnergia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
                ('seleccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.TipoEnergia')),
            ],
            options={
                'verbose_name_plural': 'Otro Tipo de energ\xeda',
            },
        ),
        migrations.CreateModel(
            name='PersonasDependen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opcion', models.CharField(choices=[('Adultos: Hombres', 'Adultos: Hombres'), ('Adultos: Mujeres', 'Adultos: Mujeres'), ('Ni\xf1as menores de 12 a\xf1os', 'Ni\xf1as menores de 12 a\xf1os'), ('Ni\xf1os menores de 12 a\xf1os', 'Ni\xf1os menores de 12 a\xf1os')], max_length=25)),
                ('cantidad', models.IntegerField()),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': 'Personas que dependen del afiliado',
            },
        ),
        migrations.CreateModel(
            name='Procesamiento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantiddad', models.FloatField(verbose_name='Cantidad al mes')),
                ('quien_vende', models.CharField(choices=[('Intermediario', 'Intermediario'), ('Al estado', 'Al estado'), ('Consumidor / Mercado local', 'Consumidor / Mercado local'), ('Mercado nacional', 'Mercado nacional'), ('Mercado internacional / Exportaci\xf3n', 'Mercado internacional / Exportaci\xf3n'), ('No vende', 'No vende')], max_length=50)),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.ProductosProcesados')),
            ],
            options={
                'verbose_name_plural': 'Realiza procesamiento o agregaci\xf3n de valor a rubros agropecuarios en la finca',
            },
        ),
        migrations.CreateModel(
            name='ProduccionHuevosLeche',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_produccion', models.CharField(choices=[('Producci\xf3n de leche (litros por d\xeda)', 'Leche (litros por d\xeda)'), ('Producci\xf3n de carne (kg/a\xf1o)', 'Carne de res (lbs/a\xf1o)'), ('Producci\xf3n de huevos por mes', 'Huevos (und/mes)'), ('Carne Av\xedcola (lbs/mes)', 'Carne Av\xedcola (lbs/mes)'), ('Carne de cerdo (lbs/a\xf1o)', 'Carne de cerdo (lbs/a\xf1o)'), ('Carne de pelibuey lbs/a\xf1o', 'Carne de pelibuey lbs/a\xf1o'), ('Leche de cabra (litros/d\xeda)', 'Leche de cabra (litros/d\xeda)'), ('Producci\xf3n de miel (lt/a\xf1o)', 'Miel (lt/a\xf1o)'), ('Producci\xf3n de pez (kg/a\xf1o)', 'Pez (kg/a\xf1o)')], max_length=40)),
                ('cantidad', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('cuanto_vende', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('quien_vende', models.CharField(choices=[('Intermediarios', 'Intermediarios'), ('Estado', 'Estado'), ('Mercado local', 'Mercado local'), ('Otros', 'Otros'), ('No vende', 'No vende')], max_length=20)),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': 'Producci\xf3n de carne, huevos, leche, miel y otros',
            },
        ),
        migrations.CreateModel(
            name='Profesion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profecion', models.CharField(max_length=200, verbose_name='Profesi\xf3n/Ocupaci\xf3n')),
                ('promotor', models.CharField(blank=True, choices=[('Si', 'Si'), ('No', 'No')], max_length=2, null=True, verbose_name='Promotor/a')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': 'Profesi\xf3n',
            },
        ),
        migrations.CreateModel(
            name='RespuestaSiCotiza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desde_cuando', models.CharField(choices=[('Menor 1 a\xf1o', 'Menor 1 a\xf1o'), ('Mas de 1 a\xf1o', 'Mas de 1 a\xf1o')], max_length=25)),
                ('cuanto_cotiza', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('frecuencia', models.CharField(choices=[('Mensual', 'Mensual'), ('Trimestral', 'Trimestral'), ('Semestral', 'Semestral'), ('Anual', 'Anual')], max_length=25)),
                ('donde_cotiza', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.DondeCotiza')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': 'Si la respuesta es SI',
            },
        ),
        migrations.CreateModel(
            name='SistemaAgua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
                ('sistema', models.ManyToManyField(to='configuracion.Sistema')),
            ],
            options={
                'verbose_name_plural': 'Sistema de Agua Utilizado para el consumo en el hogar',
            },
        ),
        migrations.CreateModel(
            name='TablaEmpleo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temporal_hombres', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('temporal_mujeres', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('permanente_hombres', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('permanente_mujeres', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('familiar_hombres', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('familiar_mujeres', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
                ('rubro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.Cultivo')),
            ],
            options={
                'verbose_name_plural': 'Empleo',
            },
        ),
        migrations.CreateModel(
            name='TierrasAlquiladas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posse', models.CharField(choices=[('Si', 'Si'), ('No', 'No')], max_length=20, verbose_name='Posee')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': 'Posee tierras alquiladas',
            },
        ),
        migrations.CreateModel(
            name='VendeProduccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('respuesta', multiselectfield.db.fields.MultiSelectField(choices=[('Intermediario', 'Intermediario'), ('Al estado', 'Al estado'), ('Consumidor / Mercado local', 'Consumidor / Mercado local'), ('Mercado nacional', 'Mercado nacional'), ('Mercado internacional / Exportaci\xf3n', 'Mercado internacional / Exportaci\xf3n'), ('No vende', 'No vende')], max_length=112)),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name_plural': '\xbfA qui\xe9n vende su producci\xf3n?',
            },
        ),
        migrations.AddField(
            model_name='documentopropiedad',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='direccionfinca2',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='datosgenerales',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='datosfamiliares',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='credito',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='credito',
            name='formas_recibe_credito',
            field=models.ManyToManyField(blank=True, to='configuracion.FormasCredito'),
        ),
        migrations.AddField(
            model_name='credito',
            name='proyectos',
            field=models.ManyToManyField(blank=True, to='configuracion.RecibeCredito', verbose_name='De quien recibe el credito'),
        ),
        migrations.AddField(
            model_name='cotizacionorganizacion',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='cotizacionorganizacion',
            name='problemas_productor',
            field=models.ManyToManyField(blank=True, to='configuracion.ProblemasProductor', verbose_name='Problemas m\xe1s sentidos como productor'),
        ),
        migrations.AddField(
            model_name='cotizacion',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='beneficiadoproyecto',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='beneficiadoproyecto',
            name='proyectos',
            field=models.ManyToManyField(blank=True, to='configuracion.Proyecto'),
        ),
        migrations.AddField(
            model_name='areasfinca',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='areasfinca',
            name='origen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.Origen'),
        ),
        migrations.AddField(
            model_name='apicola',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='agricultura',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='agricultura',
            name='rubro',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.Cultivo'),
        ),
        migrations.AddField(
            model_name='acuicola',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
    ]
